cmake_minimum_required(VERSION 3.5)
project(gps_package)


# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

find_package(rclcpp REQUIRED)
find_package(serial_driver REQUIRED)
find_package(std_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)
rosidl_generate_interfaces(${PROJECT_NAME} "msg/GpsMessage.msg")

include_directories(include)

add_executable(receive_gpsMSG src/receive_gpsMSG.cpp)
ament_target_dependencies(receive_gpsMSG rclcpp std_msgs)

add_executable(NMEA_parser src/NMEA_parser.cpp)
ament_target_dependencies(NMEA_parser rclcpp serial_driver std_msgs)

rosidl_target_interfaces(receive_gpsMSG
  ${PROJECT_NAME} "rosidl_typesupport_cpp")

  rosidl_target_interfaces(NMEA_parser
  ${PROJECT_NAME} "rosidl_typesupport_cpp")

install(TARGETS receive_gpsMSG NMEA_parser DESTINATION lib/${PROJECT_NAME})

install(FILES package.xml DESTINATION share/${PROJECT_NAME})

ament_export_dependencies(rosidl_default_runtime)
ament_package()
